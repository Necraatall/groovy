/***********************enum test*************/
/*
1. import AssertionStatus for detecting state of assertions
2. import groovy.json.JsonSlurper for dealing with json (REST)
3. import static com.jayway.jsonpath.JsonPath.parse for parsing responses due to HTTP statuses and ReturnCodes
4. def enum into array
5. def utills, testcase ID
6. def step list - it get list of test steps
7. run for loop in each Test step from list
8. run for loop for each in collection tollContractStatus 
9. in loop run "current +1, current +2, current +3 Test Step 
10.make sleep and cancel test runner - for more memory
11. if assertionStatus is FAILED def response and detect:
	- html[@lang="en-US" (server/SEEBURGER error) and log error 
	- def sesion, token, header and if contains #status#= use header def
	- if header not contains ['HTTP/1.1 200 OK'] and log error
	- if response not contains "returnCode": 0 and log error
	- cancel test runner for more memory
12. if assertionStatus is UNKNOWN log error
13. if assertionStatus is VALID log info OK	
14. set property in Test case into normal value for active - 0
*/
import com.eviware.soapui.model.testsuite.Assertable.AssertionStatus
import groovy.json.JsonSlurper
import static com.jayway.jsonpath.JsonPath.parse

// firsthly def ArrayList - enums
// this enums is available for change if another enums will change, dont change another part of code
List<String> tollContractStatus = new ArrayList<String> (["0", "1"])

log.info "!!!!!!!Dont stop this Test Step!!!!!!!!!"
log.info "!!!!!!!Dont change this Test Step when run!!!!!!!!!"
log.info "!!!!!!!Wait for results at least 10 minutes!!!!!!!!!"

//def actual test Case and Test Step into MTD-ODS-ESB-tollContractStatus-all (next one) 
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context );
def testCase = testRunner.testCase;

// here we detect if test case were failed (when is not firsth if, then list all assertion test steps in test case, is usable as Tear Down Script too)
StepList = testCase.getTestStepList()
	StepList.each{
				// now loop arrayList value by value it means item and run it in Test step MTD-ESB-TLM-tollContractStatus-all (next 1th test step)
					for (String item : tollContractStatus) {
						for (i = 1; i <4; i++) { 
							//def actual test Case and Test Step into MTD-ODS-ESB-tollContractStatus-all (next 3rd one)
							testStep = testCase.getTestStepAt(context.currentStepIndex + i);
							if(it==testStep){
							//set property tollContractStatus with value item into TestCase
							testRunner.testCase.setPropertyValue("tollContractStatus", item)
   							//log.info testStep + ": " + item
   						
							//now run test step (will be run by count of enum values)
							testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
							testStepContext = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestRunContext(testStep);
							testStep.run(testRunner, testStepContext);
							sleep(new Random().nextInt(10) * 100);
							testRunner.cancel( "Stop the testRunner" );
							
							if(it.metaClass.hasProperty(it,'assertionStatus')){
								if(it.assertionStatus == AssertionStatus.FAILED){
            							log.error "${it.name} FAIL with value of: " + testRunner.testCase.getPropertyValue("tollContractStatus")
									def response = context.expand('${'+ testStep.name + '#Response}')
            							//log.info context.expand('${'+ testStep.name + '#Response}')
            							if (context.expand('${'+ testStep.name + '#ResponseAsXml//html[@lang="en-US"]}')){
										log.error "HTML #status# is: " + header + " it MUST BE: HTTP/1.1 200 OK. Pleas Make bug to JIRA!"				
										}
									def sessionidPair
									def token1Pair
									def header = testRunner.testCase.getTestStepByName(testStep.name).testRequest.response.responseHeaders["#status#"].each { 
    										if (it.contains("#status#=")) {
    											sessionidPair = it 
    										} 
									}
									if (header !=['HTTP/1.1 200 OK'] ) {
										log.error "HTML #status# is NOT ['HTTP/1.1 200 OK'] it MUST BE: HTTP/1.1 200 OK. Pleas Make bug to JIRA! Header is: " + header									
									}
									
									if (response !=['"returnCode": 0'] ){
										log.error "\"returnCode\" is not 0: it MUST BE: \"returnCode\": 0. Pleas Make bug to JIRA! ReturnCode is (look on response) : " + response		
									}
            							testRunner.cancel( "Stop the testRunner" )
								}
							     else if(it.assertionStatus == AssertionStatus.UNKNOWN){
            							log.error "${it.name} UNKNOWN (PROBABLY NOT ALREADY EXECUTED). Pleas Make bug to JIRA! tollContractStatus is: " + testRunner.testCase.getPropertyValue("tollContractStatus") 
							     }
							     else if(it.assertionStatus == AssertionStatus.VALID){
            							log.info "${it.name} OK! with value of: " + testRunner.testCase.getPropertyValue("tollContractStatus")
							     }
							}	
						}
					}
        			}
        		}

    


// now set property in Test case into normal value for active - 0
testRunner.testCase.setPropertyValue("tollContractStatus", "0")
