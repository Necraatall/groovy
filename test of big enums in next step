/***********************enum test*************/
/*
* Someday need to update steps and make header and response check more simple
*/
/*
1. def enum
2. def utills, testcase ID, teststep ID (next 1th one)
3. set property tollContractStatus[0]
4. run test step +1
5. def step list
6. if test step fail/Ok/UNKNOWN - defined by assertions 
7. run for cyclus for each in collection tollContractStatus
8. set tollContractStatus value by the list item from previous collection cyrcle
9. set tollContractStatus to some normal value
10.set value of country element in MTD next step by this: ${#TestCase#tollContractStatus}
11.assert in failed step not Http 200 and returnCode not 0
*/
import com.eviware.soapui.model.testsuite.Assertable.AssertionStatus
//Validate response nodes REST
import groovy.json.JsonSlurper
import static com.jayway.jsonpath.JsonPath.parse

// firsthly def ArrayList - enums
// this enums is available for change if another enums will change, dont change another part of code
List<String> tollContractStatus = new ArrayList<String> (["0", "1"])

log.info "!!!!!!!Dont stop this Test Step!!!!!!!!!"
log.info "!!!!!!!Dont change this Test Step when run!!!!!!!!!"
log.info "!!!!!!!Wait for results at least 10 minutes!!!!!!!!!"

//def actual test Case and Test Step into MTD-ODS-ESB-tollContractStatus-all (next one) 
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context );
def testCase = testRunner.testCase;

// here we detect if test case were failed (when is not firsth if, then list all assertion test steps in test case, is usable as Tear Down Script too)
StepList = testCase.getTestStepList()
 
if (tollContractStatus != tollContractStatus[0] && tollContractStatus[0] != null){
	StepList.each{
				// now loop arrayList value by value it means item and run it in Test step MTD-ESB-TLM-tollContractStatus-all (next 1th test step)
					for (String item : tollContractStatus) {
						for (i = 1; i <4; i++) { 
							//def actual test Case and Test Step into MTD-ODS-ESB-tollContractStatus-all (next 3rd one)
							testStep = testCase.getTestStepAt(context.currentStepIndex + i);
							if(it==testStep){
							//set property tollContractStatus with value item into TestCase
							testRunner.testCase.setPropertyValue("tollContractStatus", item)
   							//log.info testStep + ": " + item
   						
							//now run test step (will be run by count of enum values)
							testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
							testStepContext = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestRunContext(testStep);
							testStep.run(testRunner, testStepContext);
							sleep(new Random().nextInt(10) * 100);
							testRunner.cancel( "Stop the testRunner" );
							
							if(it.metaClass.hasProperty(it,'assertionStatus')){
								if(it.assertionStatus == AssertionStatus.FAILED){
            							log.error "${it.name} FAIL with value of: " + testRunner.testCase.getPropertyValue("tollContractStatus")
									//def response = context.expand('${'+ testStep + '#Response}')
            							def response = context.expand('${'+ testStep.name + '#Response}')
            							//log.info context.expand('${'+ testStep.name + '#Response}')
            							def returnCode = parse(response).read('$.response.responseBody.returnCode')
									log.info "returnCode is: " + returnCode
									def sessionidPair
									def token1Pair
									def header = testRunner.testCase.getTestStepByName(testStep.name).testRequest.response.responseHeaders["#status#"].each { 
    										if (it.contains("#status#=")) {
    											sessionidPair = it 
    										} 
									}
									if (header !=['HTTP/1.1 200 OK'] ) {
										log.error "HTML #status# is: " + header + " it MUST BE: HTTP/1.1 200 OK. Pleas Make bug to JIRA!"									
									}
									
									if (response !=['"returnCode": 0']){
										log.error "\"returnCode\" is: " + response + " it MUST BE: \"returnCode\": 0. Pleas Make bug to JIRA!"		
									}
            							testRunner.cancel( "Stop the testRunner" )
								}
							     else if(it.assertionStatus == AssertionStatus.UNKNOWN){
            							log.error "${it.name} UNKNOWN (PROBABLY NOT ALREADY EXECUTED) " + testRunner.testCase.getPropertyValue("tollContractStatus")
							     }
							     else if(it.assertionStatus == AssertionStatus.VALID){
            							log.info "${it.name} OK! with value of: " + testRunner.testCase.getPropertyValue("tollContractStatus")
							     }
							}	
						}
					}
					i = 0;
        			}
        		}
    		}
    


// now set property in Test case into normal value for Hungary "HU"
testRunner.testCase.setPropertyValue("tollContractStatus", "0")
